# Generated by Django 2.2.13 on 2020-12-14 12:29

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone
import django_enumfield.db.fields
import surf.statusenums
import uuid


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# surf.apps.materials.migrations.0012_set_material_applaud_count
# surf.apps.materials.migrations.0014_set_material_applaud_count
# surf.apps.materials.migrations.0016_auto_20190830_0926
# surf.apps.materials.migrations.0019_auto_20191104_1226

class Migration(migrations.Migration):

    replaces = [('materials', '0001_initial'), ('materials', '0002_collection_owner'), ('materials', '0003_auto_20181026_0857'), ('materials', '0004_applaudmaterial'), ('materials', '0005_viewmaterial'), ('materials', '0006_viewmaterial_viewed_at'), ('materials', '0007_collection_is_shared'), ('materials', '0008_auto_20181117_1410'), ('materials', '0009_auto_20181205_1421'), ('materials', '0010_sharedresourcecounter'), ('materials', '0011_material_applaud_count'), ('materials', '0012_set_material_applaud_count'), ('materials', '0013_auto_20190214_1026'), ('materials', '0014_set_material_applaud_count'), ('materials', '0015_material_mptt_disciplines'), ('materials', '0016_auto_20190830_0926'), ('materials', '0017_remove_material_disciplines'), ('materials', '0018_auto_20190830_0934'), ('materials', '0019_auto_20191104_1226'), ('materials', '0020_remove_old_collection_materials'), ('materials', '0021_auto_20191112_1336'), ('materials', '0022_auto_20200121_0828'), ('materials', '0023_update_meta_communities'), ('materials', '0024_collection_title_en'), ('materials', '0025_auto_20200714_1304'), ('materials', '0026_update_title_fields'), ('materials', '0027_predictable_theme_ordering'), ('materials', '0028_collectionmaterial_position')]

    initial = True

    dependencies = [
        ('filters', '0001_squashed_0016_filters_external_id_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('themes', '0001_initial'),

    ]

    operations = [
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_id', models.CharField(max_length=255, verbose_name='EduRep material id')),
                ('disciplines', models.ManyToManyField(blank=True, related_name='materials', to='filters.FilterCategoryItem')),
                ('themes', models.ManyToManyField(blank=True, related_name='materials', to='themes.Theme')),
                ('description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('material_url', models.URLField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('applaud_count', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplaudMaterial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applauds', to='materials.Material')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applauds', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ViewMaterial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_views', to='materials.Material')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_views', to=settings.AUTH_USER_MODEL)),
                ('viewed_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('materials', models.ManyToManyField(blank=True, related_name='collections', to='materials.Material')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('is_shared', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SharedResourceCounter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('counter_key', models.CharField(max_length=255)),
                ('counter_value', models.IntegerField(default=0)),
                ('extra', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='material',
            name='applaud_count',
        ),
        migrations.AddField(
            model_name='applaudmaterial',
            name='applaud_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='applaudmaterial',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applauds', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='material',
            name='mptt_disciplines',
            field=models.ManyToManyField(blank=True, related_name='materials', to='filters.MpttFilterItem'),
        ),
        migrations.RemoveField(
            model_name='material',
            name='disciplines',
        ),
        migrations.RenameField(
            model_name='material',
            old_name='mptt_disciplines',
            new_name='disciplines',
        ),
        migrations.AddField(
            model_name='collection',
            name='deleted_at',
            field=models.DateTimeField(null=True),
        ),
        migrations.AddField(
            model_name='collection',
            name='publish_status',
            field=django_enumfield.db.fields.EnumField(default=0, enum=surf.statusenums.PublishStatus),
        ),
        migrations.AddField(
            model_name='material',
            name='deleted_at',
            field=models.DateTimeField(null=True),
        ),
        migrations.AlterField(
            model_name='collection',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collections', to=settings.AUTH_USER_MODEL, verbose_name='Owner'),
        ),
        migrations.CreateModel(
            name='CollectionMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('featured', models.BooleanField(default=False)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materials.Collection')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='materials.Material')),
            ],
            options={
                'verbose_name': 'Material',
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='new_materials',
            field=models.ManyToManyField(blank=True, related_name='new_collections', through='materials.CollectionMaterial', to='materials.Material'),
        ),
        migrations.RemoveField(
            model_name='collection',
            name='materials',
        ),
        migrations.RemoveField(
            model_name='collection',
            name='owner',
        ),
        migrations.RenameField(
            model_name='collection',
            old_name='new_materials',
            new_name='materials',
        ),
        migrations.AlterField(
            model_name='collection',
            name='materials',
            field=models.ManyToManyField(blank=True, related_name='collections', through='materials.CollectionMaterial', to='materials.Material'),
        ),
        migrations.RemoveField(
            model_name='viewmaterial',
            name='material',
        ),
        migrations.RemoveField(
            model_name='viewmaterial',
            name='user',
        ),
        migrations.AddField(
            model_name='material',
            name='applaud_count',
            field=models.BigIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='material',
            name='star_1',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='material',
            name='star_2',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='material',
            name='star_3',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='material',
            name='star_4',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='material',
            name='star_5',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='material',
            name='view_count',
            field=models.BigIntegerField(default=0),
        ),
        migrations.DeleteModel(
            name='ApplaudMaterial',
        ),
        migrations.DeleteModel(
            name='ViewMaterial',
        ),
        migrations.AlterField(
            model_name='sharedresourcecounter',
            name='counter_key',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AddConstraint(
            model_name='collectionmaterial',
            constraint=models.UniqueConstraint(fields=('collection', 'material'), name='unique materials in collection'),
        ),
        migrations.RenameField(
            model_name='collection',
            old_name='title',
            new_name='title_nl',
        ),
        migrations.AlterField(
            model_name='collection',
            name='title_nl',
            field=models.CharField(blank=True, max_length=80, null=True),
        ),
        migrations.AddField(
            model_name='collection',
            name='title_en',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='collection',
            name='title_nl',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterModelOptions(
            name='collection',
            options={'ordering': ('created_at',)},
        ),
        migrations.AddField(
            model_name='collection',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='collectionmaterial',
            name='position',
            field=models.IntegerField(default=0),
        ),
    ]
